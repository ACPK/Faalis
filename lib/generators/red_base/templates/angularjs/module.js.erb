<% if is_in_engine? %>
/* -----------------------------------------------------------------------------
    Red Base - Basic website skel engine
    Copyright (C) 2012-2013 Yellowen

    This program is free software; you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation; either version 2 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License along
    with this program; if not, write to the Free Software Foundation, Inc.,
    51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.
----------------------------------------------------------------------------- */

<% end %>
// <%= resource.pluralize %> Module
var <%= resource.pluralize %> = angular.module("<%= resource %>", ["ListView"]);

// <%= resource.pluralize %> configuration section ---------------------------
<%= resource.pluralize %>.config(["$routeProvider", function($routeProvider){

    // Add any route you need here
    $routeProvider.
        when("/<%= resource_url %>", {
            templateUrl: template("<%= resource_path %>/index"),
            controller: "<%= resource %>Controller"
        }).
        when("/<%= resource_url %>/new",{
            templateUrl: template("<%= resource_path %>/new"),
            controller: "Add<%= resource %>Controller"
        }).
        when("/<%= resource_url %>/:id/edit",{
            templateUrl: template("<%= resource_path %>/new"),
            controller: "Add<%= resource %>Controller"
        });

}]);

// <%= resource %> index controller -------------------------------------------------------
// This controller is responsible for list page (index)
<%= resource.pluralize %>.controller("<%= resource %>Controller", ["$scope", "gettext", "Restangular",
                                      function($scope, gettext, API){

    // details_template is the address of template which should load for
    // each item details section
    $scope.details_template = template("<%= resource_path %>/details");

    // Buttons for top of the list-view
    $scope.buttons = [
        {
            title: gettext("New"),
            icon: "fa fa-plus",
            classes: "btn tiny green",
            route: "#<%= resource_url %>/new"

        }
    ];

    /*
     * On delete event handler - `items` is an array of objects to delete
     */
    $scope.on_delete = function(items){

        var query = [];
        items.forEach(function(item){
            query.push(item.id);
        });

        API.all("<%= resource.pluralize.underscore %>").customDELETE(query.join(","))
            .then(function(data) {

                $scope.<%= resource.pluralize.underscore %> = _.filter($scope.<%= resource.pluralize.underscore %>, function(x){
                    return !(query.indexOf(x.id) != -1);
                });
                success_message(data.msg);
            })
            .catch(catch_error);
    };

    API.all("<%= resource.pluralize.underscore %>").getList()
        .then(function(data){
            $scope.<%= resource.pluralize.underscore %> = data;
        })
        .catch(catch_error);

}]);

<%= resource.pluralize %>.controller("Add<%= resource %>Controller", ["Restangular", "$scope", "$location", "$routeParams", "gettext", function(API, $scope, $location, $routeParams, gettext){

    $scope.editing = false;
    $scope.obj_id = null;
    <% fields.each do |name, type| %>
    <% if ["belongs_to", "has_many"].include? type %>
    <%= type.get_list %>.then(function(data){
        $scope.<%= type.resource_name %> = data;
    }).catch(catch_error);
    <% end %>
    <% end %>
    if( "id" in $routeParams ){
        $scope.obj_id = $routeParams.id;
        $scope.editing = true;
        var obj = API.one("<%= resource.pluralize.underscore %>", $scope.obj_id).get()
                .then(function(data) {
                <% fields.each do |field_name, field_type| %>
                    $scope.<%= field_name %> = <% if not ["string", "integer", "belongs_to", "has_many"].include? field_type %><%= "to_#{field_type}(data.#{field_name})" %><% else %>data.<%= field_name %><% end %>;<% end %>
                })
                .catch(catch_error);
    }


    $scope.cancel = function(){
        $(".form input").val("");
        $location.path("<%= resource_url %>");
    };

    $scope.save = function(save_another){
        var <%= resource.underscore %> = {
            <% fields.each do |field_name, field_type| %>
                <%= field_name %>: $scope.<%= field_name %>,
            <% end %>
        };
        if ($scope.obj_id) {
            API.one("<%= resource.pluralize.underscore %>", $scope.obj_id).patch(<%= resource.underscore %>)
                .then(function(){
                    success_message(gettext("<%= resource %> updated successfully."));
                    if (save_another) {
                        $(".form input").val("");
                    }
                    else {
                        $location.path("<%= resource_url %>");
                    }
                })
                .catch(catch_error);
        }
        else {
            API.all("<%= resource.pluralize.underscore %>").post(<%= resource.underscore %>).then(function(){
                success_message(gettext("<%= resource %> created successfully."));
                if (save_another) {
                    $(".form input").val("");
                }
                else {
                    $location.path("<%= resource_url %>");
                }
            }).catch(catch_error);
        }

    };
}]);
